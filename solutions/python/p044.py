"""
Pentagonal numbers are generated by the formula, Pn=n(3n-1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P_4 + P_7 = 22 + 70 = 92 = P8. However, their difference, 70  22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, P_j and P_k, for which their sum and difference are pentagonal and D = |Pk - Pj| is minimised; what is the value of D?
"""

"""
Solution: Build a large set of pentagonal numbers and just brute force check
all pairs for the desired property while keeping track of lowest difference
"""
def run():
    N = 3000
    
    # make a big set of pentagonal numbers.  we don't care about order,
    # just membership
    pn = set()
    for n in xrange(1,N):
        pn.add(n*(3*n-1)/2)
    
    D = N**3
    for i in pn:
        for j in pn:
            if i == j or i + j not in pn or i - j not in pn: continue
            d = abs(i - j)
            if d < D:
                D = d
                
    return D
        